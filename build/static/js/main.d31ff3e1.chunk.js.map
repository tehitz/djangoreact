{"version":3,"sources":["store/actions/auth.js","store/actions/actionTypes.js","containers/Signup.js","components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","containers/Login.js","containers/HomeView.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["authSuccess","token","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","FormItem","Form","Item","RegistrationForm","state","confirmDirty","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","onAuth","username","email","password","confirm","forceUpdate","history","push","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","this","react_default","a","createElement","es_form","onSubmit","rules","required","message","input","prefix","icon","style","color","placeholder","validator","onBlur","es_button","htmlType","marginRight","react_router_dom","to","React","Component","WrappedRegistrationForm","create","connect","loading","password1","password2","axios","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","actions","IconText","Typography","Title","Paragraph","Text","_ref","text","Article","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","renderItem","item","title","Article_IconText","Meta","href","concat","id","description","CustomForm","handleFormSubmit","event","requestType","articleID","elements","content","defaults","headers","Content-Type","Authorization","response","status","put","_this2","TextArea","Input","isAuthenticated","Form_FormItem","label","name","rows","btnText","ArticleList","article","newProps","get","components_Article","ArticleDetail","handleDelete","match","params","delete","crossdomain","card","antIcon","fontSize","spin","NormalLoginForm","errorMessage","indicator","className","WrappedNormalLoginForm","HomeView","typography","HomeView_Title","HomeView_Paragraph","HomeView_Text","strong","level","code","divider","BaseRouter","react_router","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","onClick","padding","breadcrumb","margin","background","minHeight","children","textAlign","withRouter","App","onTryAutoSignup","routes","getItem","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","reducer","arguments","length","action","authStart","authLogout","compostEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d31ff3e1.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://santerisiirila.me:80/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n\n            })\n            .catch(error => {\n                dispatch(authFail(error))\n            })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://santerisiirila.me:80/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n\n            })\n            .catch(error => {\n                dispatch(authFail(error))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        }\n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            }\n            else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";","import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onAuth(\n            values.username,\n            values.email,\n            values.password,\n            values.confirm\n        );\n        e.forceUpdate();\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n\n        <FormItem>\n            {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n            )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [{\n              type: 'email', message: 'The input is not valid E-mail!',\n            }, {\n              required: true, message: 'Please input your E-mail!',\n            }],\n          })(\n            <Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{\n              required: true, message: 'Please input your password!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('confirm', {\n            rules: [{\n              required: true, message: 'Please confirm your password!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\n          )}\n        </FormItem>\n\n        <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n            Signup\n        </Button>\n        Or\n        <NavLink\n            style={{marginRight: '10px'}}\n            to='/login/'> Login\n        </NavLink>\n        </FormItem>\n\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","import React from 'react';\nimport { List, Avatar, Icon, Typography, Divider } from 'antd';\n\nconst { Title, Paragraph, Text } = Typography;\nconst IconText = ({ type, text }) => (\n          <span>\n            <Icon type={type} style={{ marginRight: 8 }} />\n            {text}\n          </span>\n        );\n\nconst Article = (props) => {\n    return (\n          <List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{\n              onChange: (page) => {\n                console.log(page);\n              },\n              pageSize: 6,\n            }}\n            dataSource={props.data}\n            renderItem={item => (\n              <List.Item\n                key={item.title}\n                actions={[<IconText type=\"star-o\" text=\"156\" />, <IconText type=\"like-o\" text=\"156\" />, <IconText type=\"message\" text=\"2\" />]}\n              >\n                <List.Item.Meta\n                  title={<a href={`/posts/${item.id}`}><h2>{item.title}</h2></a>}\n                  description={item.description}\n                />\n              </List.Item>\n            )}\n          />\n    )\n};\n\nexport default Article;","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n\n\n    handleFormSubmit = (event, requestType, articleID) => {\n        event.preventDefault();\n        const title = event.target.elements.title.value;\n        const content = event.target.elements.content.value;\n        axios.defaults.headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: this.props.token\n                }\n\n            if(requestType === 'post') {\n                return axios.post('http://santerisiirila.me:80/api/', {\n                    title: title,\n                    content: content\n                })\n                .then(res => console.log(res))\n                .catch((function (error) {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                }}))}\n\n            else if (requestType === 'put') {\n                return axios.put(`http://santerisiirila.me:80/api/${articleID}/`, {\n                    title: title,\n                    content: content\n                })\n                .then(res => console.log(res))\n                .catch((function (error) {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                }\n                }))}\n    };\n\n      render() {\n        const { TextArea } = Input;\n        return (\n          <div>\n              {this.props.isAuthenticated ?\n              <div>\n            <Form onSubmit={(event) => this.handleFormSubmit(event, this.props.requestType, this.props.articleID )}>\n              <FormItem label=\"Title\">\n                <Input name=\"title\" placeholder=\"Insert a title here\" />\n              </FormItem>\n              <FormItem label=\"Content\" >\n                <TextArea name=\"content\" placeholder=\"Insert your content here\" rows={20}/>\n              </FormItem>\n              <FormItem>\n                <Button type=\"primary\" htmlType=\"submit\">{this.props.btnText}</Button>\n              </FormItem>\n            </Form>\n              </div>: <div></div> }\n          </div>\n        );\n      }\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(CustomForm);","import React from 'react';\nimport axios from 'axios';\nimport Article from '../components/Article';\nimport CustomForm from '../components/Form';\nimport { connect } from 'react-redux';\n\nclass ArticleList extends React.Component {\n\n    state = {\n        article: [],\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.token) {\n            axios.defaults.headers = {\n                \"Content-Type\": \"application/json\",\n                Authorization: newProps.token\n            }\n            axios.get('http://santerisiirila.me:80/api/')\n                .then(res => {\n                    this.setState({\n                        article: res.data\n                    });\n                })\n                .catch(function (error) {\n                    if (error.response) {\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);\n                    }\n                })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Article data={this.state.article}/>\n                    <br/>\n                    {this.props.isAuthenticated ? <h2> Create an article</h2> : <h2> </h2>}\n                    <CustomForm\n                    requestType=\"post\"\n                    articleID={null}\n                    btnText=\"Create\" />\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n}\n\nexport default connect(mapStateToProps)(ArticleList);","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'antd';\nimport CustomForm from '../components/Form';\n\nclass ArticleDetail extends React.Component {\n\n    state = {\n        article: {}\n    }\n\n\n    componentWillReceiveProps(newProps) {\n            if (newProps.token) {\n                const articleID = this.props.match.params.articleID;\n                axios.defaults.headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: newProps.token\n                }\n                axios.get(`http://santerisiirila.me:80/api/${articleID}/`, {crossdomain: true})\n                    .then(res => {\n                        this.setState({\n                            article: res.data\n                        });\n                    })\n                    .catch(function (error) {\n                        if (error.response) {\n                            console.log(error.response.data);\n                            console.log(error.response.status);\n                            console.log(error.response.headers);\n                        }\n                    })\n            }\n\n        }\n\n\n    handleDelete = event => {\n\n        if (this.props.token) {\n            const articleID = this.props.match.params.articleID;\n        axios.defaults.headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: this.props.token\n                }\n        axios.delete(`http://santerisiirila.me:80/api/${articleID}/`);\n        this.props.history.push('/');\n        this.forceUpdate();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title={this.state.article.title}>\n                    <p>{this.state.article.content}</p>\n                </Card>\n                <CustomForm\n                    requestType=\"put\"\n                    articleID={this.props.match.params.articleID}\n                    btnText=\"Update\" />\n                <form onSubmit={this.handleDelete}>\n                    <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n}\n\nexport default connect(mapStateToProps)(ArticleDetail);","import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.username, values.password)\n      }\n    });\n    this.props.history.push('/posts/');\n  };\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n          <p>{this.props.error.message}</p>\n      );\n    }\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n          {errorMessage}\n          {\n            this.props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                :\n\n\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <Form.Item>\n                {getFieldDecorator('username', {\n                  rules: [{required: true, message: 'Please input your username!'}],\n                })(\n                    <Input\n                        prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                        placeholder=\"Username\"\n                    />,\n                )}\n              </Form.Item>\n\n              <Form.Item>\n                {getFieldDecorator('password', {\n                  rules: [{required: true, message: 'Please input your Password!'}],\n                })(\n                    <Input\n                        prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />,\n                )}\n              </Form.Item>\n              <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                Login\n              </Button>\n              Or\n              <NavLink\n                  style={{marginRight: '10px'}}\n                  to='/signup'> Signup\n              </NavLink>\n\n              </Form.Item>\n            </Form>\n          }\n        </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\n  const mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n  }}\n\n  const mapDispatchToProps = dispatch => {\n    return {\n      onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);\n\n","import { Typography, Divider } from 'antd';\nimport React from \"react\";\n\nconst { Title, Paragraph, Text } = Typography;\nclass HomeView extends React.Component {\n    render() {\n        return (\n        <Typography>\n            <Title>Introduction</Title>\n            <Paragraph>\n                In the process of internal desktop applications development, many different design specs and\n                implementations would be involved, which might cause designers and developers difficulties and\n                duplication and reduce the efficiency of development.\n            </Paragraph>\n            <Paragraph>\n                After massive project practice and summaries, Ant Design, a design language for background\n                applications, is refined by Ant UED Team, which aims to{' '}\n                <Text strong>\n                    uniform the user interface specs for internal background projects, lower the unnecessary\n                    cost of design differences and implementation and liberate the resources of design and\n                    front-end development\n                </Text>\n                .\n            </Paragraph>\n            <Title level={2}>Guidelines and Resources</Title>\n            <Paragraph>\n                We supply a series of design principles, practical patterns and high quality design resources\n                (<Text code>Sketch</Text> and <Text code>Axure</Text>), to help people create their product\n                prototypes beautifully and efficiently.\n            </Paragraph>\n\n            <Paragraph>\n                <ul>\n                    <li>\n                        <a href=\"/docs/spec/proximity\">Principles</a>\n                    </li>\n                    <li>\n                        <a href=\"/docs/pattern/navigation\">Patterns</a>\n                    </li>\n                    <li>\n                        <a href=\"/docs/resource/download\">Resource Download</a>\n                    </li>\n                </ul>\n            </Paragraph>\n\n            <Divider/>\n        </Typography>)\n    }\n}\n export default HomeView;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Signup from './containers/Signup';\nimport ArticleList from './containers/ArticleListView';\nimport ArticleDetail from './containers/ArticleDetailView';\nimport Login from './containers/Login';\nimport HomeView from \"./containers/HomeView\";\n\nconst BaseRouter = () => (\n        <div>\n            <Route exact path='/' component={HomeView}/>\n            <Route exact path='/posts/' component={ArticleList}/>\n            <Route exact path='/posts/:articleID/' component={ArticleDetail}/>\n            <Route exact path='/login/' component={Login}/>\n            <Route exact path='/signup/' component={Signup}/>\n        </div>\n\n\n);\n\nexport default BaseRouter;","import {Layout, Menu, Breadcrumb, } from 'antd';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as actions from \"../store/actions/auth\";\nimport { connect } from \"react-redux\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n    render() {\n\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\"/>\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['1']}\n                        style={{lineHeight: '64px'}}\n                    >\n                        {\n                            this.props.isAuthenticated ?\n\n                                <Menu.Item key=\"3\" onClick={this.props.logout}>\n                                    Logout\n                                </Menu.Item>\n\n                                :\n\n                                <Menu.Item key=\"3\">\n                                    <Link to=\"/login/\">Login</Link>\n                                </Menu.Item>\n\n                        }\n                        <Menu.Item key=\"2\">\n                            <Link to=\"/posts/\">Posts</Link>\n                        </Menu.Item>\n\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/\">Home</Link>\n                        </Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{padding: '0 50px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item><Link to='/login/'>Login</Link></Breadcrumb.Item>\n                        <Breadcrumb.Item><Link to='/posts/'>Posts</Link></Breadcrumb.Item>\n                        <Breadcrumb.Item><Link to='/'>Home</Link></Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div style={{background: '#fff', padding: 24, minHeight: 280}}>{this.props.children}</div>\n                </Content>\n                <Footer style={{textAlign: 'center'}}>\n                </Footer>\n            </Layout>\n        );\n    }\n}\n\n\n  const mapDispatchToProps = dispatch => {\n    return {\n      logout: () => dispatch(actions.logout())\n    }\n  }\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\n\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport BaseRouter from './routes';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/auth';\nimport CustomLayout from './containers/Layout';\n\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n\n    render() {\n    return (\n        <div>\n            <Router>\n                <CustomLayout {...this.props}>\n                    <BaseRouter/>\n                </CustomLayout>\n            </Router>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonTryAutoSignup: () => dispatch(actions.authCheckState())\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/auth';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst compostEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose();\n\nconst store = createStore(reducer, compostEnhances(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}